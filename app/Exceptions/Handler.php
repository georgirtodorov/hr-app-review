<?php

namespace App\Exceptions;


use App\System\Errors;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Validation\ValidationException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (ReportableException $e) {
            if (!app()->environment('local')) {
                Errors\Service::makeAndSave($e->getPrevious());
            }
        });
    }

    public function report(Throwable $e)
    {
//        parent::report($e);
    }

    /**
     * Render an exception in an HTTP responce
     *
     * @param Request $request
     * @param Throwable $e
     * @return Response
     */
    public function render($request, Throwable $e)
    {
        \response(['error' => $e->getMessage()], 400);
        $response = [
            'error' => $e->getMessage(),
            'error_id' => Errors\Repository::get($e->getMessage())->id ?? null,
        ];
        if (app()->environment('local')) {
            $response['trace'] = ['trace' => $e->getTrace()];
        }
        return \response($response, $e->getCode() ?: 500);


//        return parent::render($request, $e); // TODO: Change the autogenerated stub
        if ($e instanceof ValidationException) {
            return \response([
                'error' => $e
            ], 400);

        }
        return \response(['error' => $e->getMessage()], $e->getCode() ?: 400);

    }
}
